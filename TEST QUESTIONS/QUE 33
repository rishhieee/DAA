from collections import deque

def updateMatrix(mat):
    m, n = len(mat), len(mat[0])
    distances = [[float('inf')] * n for _ in range(m)]
    queue = deque()

    for i in range(m):
        for j in range(n):
            if mat[i][j] == 0:
                distances[i][j] = 0
                queue.append((i, j))
    
    directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]
    
    while queue:
        x, y = queue.popleft()
        for dx, dy in directions:
            new_x, new_y = x + dx, y + dy
            if 0 <= new_x < m and 0 <= new_y < n:
                if distances[new_x][new_y] > distances[x][y] + 1:
                    distances[new_x][new_y] = distances[x][y] + 1
                    queue.append((new_x, new_y))
    
    return distances
mat1 = [[0, 0, 0], [0, 1, 0], [0, 0, 0]]
mat2 = [[0, 0, 0], [0, 1, 0], [1, 1, 1]]
print(updateMatrix(mat1))  
print(updateMatrix(mat2))  
